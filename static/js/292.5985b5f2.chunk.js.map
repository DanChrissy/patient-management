{"version":3,"file":"static/js/292.5985b5f2.chunk.js","mappings":"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","sources":["components/Button/index.tsx","components/Dropdown/MenuItems/index.tsx","components/Dropdown/index.tsx","components/InputField/index.tsx","components/Record/index.tsx","helpers/validators/index.tsx","pages/Auth/Register/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { FunctionComponent, CSSProperties } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface ButtonStyled { \r\n    outline?: boolean,\r\n    primary?: boolean\r\n}\r\ninterface ButtonProps extends ButtonStyled {\r\n    title?: string,\r\n    disabled?: boolean,\r\n    customStyles?: CSSProperties\r\n    onClick?: () => any\r\n}\r\n\r\nconst Button : FunctionComponent <ButtonProps> = ({ title, disabled, customStyles, onClick, ...props}) => {\r\n    return (\r\n        <ButtonContainer\r\n            type='button'\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={customStyles}\r\n            {...props}\r\n        >\r\n            {title}\r\n        </ButtonContainer>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n\r\nconst ButtonContainer = styled.button<ButtonStyled>`\r\n    outline: none;\r\n    border: none;\r\n\r\n    width: auto;\r\n    padding: var(--space-12) var(--space-14);\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-family: 'DM Sans';\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-size: normal;\r\n\r\n    color: var(--color-white);\r\n    background-color: var(--color-purple-800);\r\n    border-radius: 0.25rem;\r\n\r\n   cursor: pointer;\r\n\r\n   :disabled {\r\n       cursor: default;\r\n   }\r\n\r\n\r\n`;","import { CSSProperties, FunctionComponent } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface BaseProps {\r\n    title: string,\r\n    customStyles?: CSSProperties\r\n}\r\n\r\ninterface GroupProps extends BaseProps {\r\n    titleStyles?: CSSProperties,\r\n}\r\n\r\ninterface MenuItemProps extends BaseProps {\r\n    onClick?: () => any,\r\n    disabled?: boolean\r\n}\r\n\r\nexport const GroupMenuItems : FunctionComponent <GroupProps>= ({ title, customStyles, titleStyles, children }) => {\r\n    return (\r\n        <GroupContainer style={customStyles}>\r\n            <p className='group-title' style={titleStyles}>{title}</p>\r\n            {children}\r\n        </GroupContainer>\r\n    )\r\n}\r\n\r\nexport const MenuItem : FunctionComponent <MenuItemProps> = ({ title, customStyles, onClick, disabled = false }) => {\r\n    return (\r\n        <MenuItemContainer disabled={disabled} style={customStyles} onClick={() => (!disabled && onClick) && onClick()}>\r\n            {title}\r\n        </MenuItemContainer>\r\n    )\r\n}\r\n\r\nconst GroupContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .group-title {\r\n        margin: 0;\r\n\r\n        font-family: 'DM Sans';\r\n        font-size: 0.625rem;\r\n        line-height: 0.625rem;\r\n        font-weight: normal;\r\n        font-style: normal;\r\n\r\n        color: var(--color-gray-100);\r\n\r\n        padding: 0.25rem var(--space-16);\r\n        margin-bottom: var(--space-8);\r\n\r\n        background-color: var(--color-gray-800);\r\n        text-transform: uppercase;\r\n    }\r\n`;\r\n\r\nconst MenuItemContainer = styled.div<{disabled?: boolean}>`\r\n    padding: 0.5rem 0.625rem;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n\r\n    color: var(--color-gray-100);\r\n\r\n    ${props => !props.disabled && css`\r\n        :hover {\r\n            background-color: var(--color-gray-800);\r\n            cursor: pointer;\r\n        }\r\n    `}\r\n\r\n\r\n`;","import { CSSProperties, FunctionComponent, ReactNode, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { StyledTypes } from '../InputField';\r\n\r\ntype Props = {\r\n    styledType?: StyledTypes,\r\n    trigger: ReactNode,\r\n    customContainerStyes?: CSSProperties,\r\n    error?:boolean\r\n}\r\n\r\nconst Dropdown : FunctionComponent <Props> = ({ styledType, trigger, error, customContainerStyes, children}) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    return (\r\n        <DropdownWrapper>\r\n            <DropdownTrigger styledType={styledType} error={error} onClick={() => setIsOpen(!isOpen)}>\r\n                {trigger}\r\n            </DropdownTrigger>\r\n            {isOpen &&\r\n                <DropdownContainer style={customContainerStyes}>\r\n                    {children}\r\n                </DropdownContainer>\r\n            }\r\n        </DropdownWrapper>\r\n        \r\n    )\r\n}\r\n\r\nexport default Dropdown;\r\n\r\nconst DropdownWrapper = styled.div`\r\n    width: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    position: relative;\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`;\r\n\r\nconst DropdownTrigger = styled.div<{styledType?: StyledTypes, error?: boolean}>`\r\n    padding: var(--space-10) var(--space-12);\r\n    background-color: var(--color-white);\r\n    border: 1px solid var(--color-gray-800);\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: var(--color-gray-600);\r\n\r\n    border-radius: 0.25rem;\r\n    box-sizing: border-box;\r\n\r\n    ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n        min-width: 25rem;\r\n        min-height: 3rem;\r\n\r\n        font-size: var(--font-16);\r\n        font-weight: 500;\r\n\r\n        border: 2px solid var(--color-gray-600);\r\n\r\n    `}\r\n\r\n    ${props => props.error && css`\r\n        border-color: var(--color-orange-600);\r\n        background-color: var(--color-orange-100);\r\n    `}\r\n\r\n    ${props => (props.error && (props.styledType === StyledTypes.LARGE)) && css`\r\n        border: 2px solid var(--color-red-600);\r\n        background-color: var(--color-white);\r\n        color: var(--color-black);\r\n    `}\r\n`;\r\n\r\nconst DropdownContainer = styled.div`\r\n    width: auto;\r\n    min-width: 14rem;\r\n    /* min-width: max-content; */\r\n\r\n    position: absolute;\r\n    z-index: 2;\r\n    top: 2.5rem;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.125rem;\r\n\r\n    padding: var(--space-8) 0;\r\n    background-color: var(--color-gray-900);\r\n    color: var(--color-white);\r\n\r\n    border-radius: 0.25rem;\r\n`","import { ChangeEvent, FunctionComponent } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport enum StyledTypes {\r\n    LARGE = 'LARGE',\r\n    SMALL = 'SMALL'\r\n}\r\n\r\nexport interface Error {\r\n    hasError: boolean,\r\n    errorMsg?: string\r\n}\r\n\r\nexport interface InputProps {\r\n    styledType?: StyledTypes,\r\n    type?: string,\r\n    value?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => any,\r\n    error?: Error,\r\n    [x: string]: any\r\n}\r\n\r\nconst InputField : FunctionComponent <InputProps> = ({ styledType, type = 'text', value, error={ hasError: false }, onChange, ...props}) => {\r\n    return (\r\n        <InputErrorContainer>\r\n            <Input\r\n                styledType={styledType}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                error={error.hasError}\r\n                {...props}\r\n            />\r\n            {(error.hasError && error.errorMsg) &&\r\n                <ErrorDisplay styledType={styledType}>{error.errorMsg}</ErrorDisplay>\r\n            }\r\n        </InputErrorContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default InputField;\r\n\r\nconst InputErrorContainer = styled.div`\r\n    width: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input<{styledType?: StyledTypes, error?: boolean}>`\r\n    outline: none !important;\r\n\r\n    padding: var(--space-10) var(--space-12);\r\n    background-color: var(--color-white);\r\n    border: 1px solid var(--color-gray-800);\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: var(--color-gray-600);\r\n\r\n    border-radius: 0.25rem;\r\n    box-sizing: border-box;\r\n\r\n    ::placeholder {\r\n        color: var(--color-gray-400);\r\n    }\r\n\r\n    :focus {\r\n        border: 1px solid var(--color-purple-800);\r\n\r\n        ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n            border: 2px solid var(--color-purple-800);\r\n        `}\r\n\r\n        ${props => (props.error && (props.styledType === StyledTypes.LARGE)) && css`\r\n            border: 2px solid var(--color-red-600);\r\n        `}\r\n    }\r\n\r\n    ${props => props.error && css`\r\n        border: 1px solid var(--color-orange-600);\r\n        background-color: var(--color-orange-100);\r\n    `}\r\n\r\n    ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n        min-width: 25rem;\r\n        min-height: 3rem;\r\n\r\n        font-size: var(--font-16);\r\n        font-weight: 500;\r\n\r\n        border: 2px solid var(--color-gray-600);\r\n\r\n    `}\r\n\r\n    ${props => (props.error && (props.styledType === StyledTypes.LARGE)) && css`\r\n        border: 2px solid var(--color-red-600);\r\n        background-color: var(--color-white);\r\n        color: var(--color-black);\r\n    `}\r\n\r\n\r\n`;\r\n\r\nconst ErrorDisplay = styled.div<{styledType?: StyledTypes}>`\r\n    margin-top: var(--space-8);\r\n    padding: var(--space-8);\r\n    border-radius: 0.25rem;\r\n\r\n    font-size: var(--font-10);\r\n\r\n    color: var(--color-orange-800);\r\n    background-color: var(--color-red-100);\r\n\r\n    border: 1px solid var(--color-red-800);\r\n\r\n    ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n        font-size: var(--font-12);\r\n    `}\r\n\r\n`;","import { FunctionComponent, CSSProperties } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport InputField, { InputProps } from '../InputField';\r\n\r\ninterface RecordProps extends InputProps {\r\n    title: string,\r\n    customStyleProps?: CSSProperties,\r\n    customField?: any,\r\n}\r\n\r\nconst Record : FunctionComponent <RecordProps> = ({ title, customStyleProps, customField, ...props}) => {\r\n    return (\r\n        <RecordContainer style={customStyleProps}>\r\n            <p>{title}</p>\r\n            {customField ||\r\n                <InputField\r\n                    {...props}\r\n                />\r\n            }\r\n            \r\n        </RecordContainer>\r\n    )\r\n}\r\n\r\nexport default Record;\r\n\r\nconst RecordContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: var(--color-gray-600);\r\n\r\n    p { margin: 0; margin-bottom: var(--space-8);}\r\n\r\n`;","export const validateEmail = (email: string) : boolean => {\r\n    let isValid = true;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    isValid = re.test(String(email).toLowerCase());\r\n    return isValid;\r\n};\r\n\r\n","import { ChangeEvent, FunctionComponent, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Parse from 'parse';\r\nimport Record from '../../../components/Record';\r\nimport Button from '../../../components/Button';\r\nimport { StyledTypes } from '../../../components/InputField';\r\nimport { validateEmail } from '../../../helpers/validators';\r\nimport { AsyncLocalStorage } from 'async_hooks';\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport { GroupMenuItems, MenuItem } from '../../../components/Dropdown/MenuItems';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setUser } from '../../../store/authReducer';\r\n\r\ninterface Role {\r\n    id: string,\r\n    attributes: {name: string}\r\n}\r\nconst Register : FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        password: '',\r\n        role: { attributes: { name: '' } }\r\n    });\r\n    const [allRoles, setAllRoles] = useState<Parse.Object[]>([]);\r\n    \r\n    const [errors, setErrors] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        async function getAllRoles() {\r\n            try {\r\n                const queryRoles = new Parse.Query('_Role');\r\n                const results : Parse.Object[]= await queryRoles.find();\r\n                setAllRoles(results);\r\n            } catch (err) {\r\n                alert('Unable to select role.');\r\n            }\r\n        }\r\n        getAllRoles();\r\n    }, []);\r\n\r\n    function handleOnValueChange(e: ChangeEvent<HTMLInputElement>) {\r\n        const {name, value} = e.currentTarget;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    function handleSelectRole(role: any) {\r\n        setValues({\r\n            ...values,\r\n            role: role\r\n        });\r\n    }\r\n\r\n    function validateValues() {\r\n        let isValid = true;\r\n        let validateErrors : string[] = [];\r\n        for(const [key, value] of Object.entries(values)) {\r\n            if (key === 'emailAddress') {\r\n                if (!value) {\r\n                    validateErrors.push(key);\r\n                } else {\r\n                    const isEmailValid = validateEmail(values.emailAddress);\r\n                    if (!isEmailValid) {\r\n                        validateErrors.push(key);\r\n                    }\r\n                }\r\n            } else if (key === 'role') {\r\n                if (Object.keys(values.role).length === 0) {\r\n                    validateErrors.push(key);\r\n                } else if (!values?.role?.attributes?.name) {\r\n                    validateErrors.push(key);\r\n                }\r\n            } else {\r\n                if (!value) {\r\n                    validateErrors.push(key);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (validateErrors.length > 0) {\r\n            console.log('Vlid error:', validateErrors);\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(validateErrors);\r\n        return isValid;\r\n    }\r\n\r\n    async function handleRegisterUser() {\r\n        const valid = validateValues();\r\n        if (!valid) { return; }\r\n\r\n        try {\r\n            const newUserObj = new Parse.Object('_User');\r\n            newUserObj.set('username', values.emailAddress);\r\n            newUserObj.set('email', values.emailAddress);\r\n            newUserObj.set('password', values.password);\r\n            newUserObj.set('firstName', values.firstName);\r\n            newUserObj.set('lastName', values.lastName);\r\n            newUserObj.set('role', values.role);\r\n\r\n            await newUserObj.save();\r\n\r\n            try {\r\n                const loggedIn = await Parse.User.logIn(values.emailAddress, values.password);\r\n                let updatedUserDetails : any = {\r\n                    id: loggedIn.id,\r\n                    ...loggedIn.attributes,\r\n                    role: {\r\n                        id: loggedIn.get('role').id,\r\n                    },\r\n                }\r\n\r\n                const roleQuery: Parse.Query = new Parse.Query('_Role');\r\n                await roleQuery.get(loggedIn.get('role').id)\r\n                    .then(res => {\r\n                        const userRole = res.get('name');\r\n                        updatedUserDetails = {\r\n                            ...updatedUserDetails,\r\n                            role: {\r\n                                ...updatedUserDetails.role,\r\n                                name: userRole\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('User role could not be found: ', err);\r\n                    })\r\n\r\n\r\n                delete updatedUserDetails.sessionToken;\r\n                delete updatedUserDetails.ACL;\r\n                \r\n                dispatch(setUser(updatedUserDetails));\r\n                alert('User Registered');\r\n\r\n            } catch (err) {\r\n                console.log('Login failed:', err);\r\n                alert('Unable to login registered user');\r\n            }\r\n        } catch (err) {\r\n            console.log('Could not register user: ', err);\r\n            alert('Unable to register user');\r\n        }\r\n    }\r\n    return (\r\n        <RegisterWrapper>\r\n            <RegisterContainer>\r\n\r\n                <RegisterFields>\r\n                    <Record\r\n                        title='First Name'\r\n                        name=\"firstName\"\r\n                        styledType={StyledTypes.LARGE}\r\n                        onChange={handleOnValueChange}\r\n                        error={{\r\n                            hasError: errors.includes('firstName'),\r\n                            errorMsg: 'Please enter a value'\r\n                        }}\r\n                    />\r\n                    <Record\r\n                        title='Last Name'\r\n                        name=\"lastName\"\r\n                        styledType={StyledTypes.LARGE}\r\n                        onChange={handleOnValueChange}\r\n                        error={{\r\n                            hasError: errors.includes('lastName'),\r\n                            errorMsg: 'Please enter a value'\r\n                        }}\r\n                    />\r\n                    <Record\r\n                        title='Email Address'\r\n                        name=\"emailAddress\"\r\n                        type='email'\r\n                        styledType={StyledTypes.LARGE}\r\n                        onChange={handleOnValueChange}\r\n                        error={{\r\n                            hasError: errors.includes('emailAddress'),\r\n                            errorMsg: 'Please enter a valid email'\r\n                        }}\r\n                    />\r\n                    <Record\r\n                        title='Password'\r\n                        name=\"password\"\r\n                        type='password'\r\n                        styledType={StyledTypes.LARGE}\r\n                        onChange={handleOnValueChange}\r\n                        error={{\r\n                            hasError: errors.includes('password'),\r\n                            errorMsg: 'Please enter correct password'\r\n                        }}\r\n                    />\r\n\r\n                    <Record\r\n                        title='ROLE'\r\n                        customField={\r\n                            <Dropdown\r\n                                styledType={StyledTypes.LARGE}\r\n                                error={errors.includes('role')}\r\n                                trigger={\r\n                                    <div>\r\n                                        {values?.role?.attributes?.name || 'No Role Selected'}\r\n                                    </div>\r\n                                }\r\n                                customContainerStyes={{\r\n                                    width: '15rem',\r\n                                }}\r\n                            >\r\n                                <GroupMenuItems title='ROLES' >\r\n                                    {allRoles.map((role: Parse.Object, index: number) => {\r\n                                        return (\r\n                                            <MenuItem\r\n                                                title={role?.attributes?.name}\r\n                                                onClick={() => handleSelectRole(role)}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </GroupMenuItems>\r\n                                \r\n                            </Dropdown>\r\n                        }\r\n                    />\r\n                </RegisterFields>\r\n                \r\n\r\n                <Button\r\n                    title='Register'\r\n                    onClick={handleRegisterUser}\r\n                    customStyles={{\r\n                        width: '25rem',\r\n                        fontSize: 'var(--font-18)',\r\n                        textTransform: 'uppercase'\r\n                    }}\r\n                />\r\n            </RegisterContainer>\r\n        </RegisterWrapper>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\nconst RegisterWrapper = styled.div`\r\n    height: max-content;\r\n    width: 100%;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nconst RegisterContainer = styled.div`\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* justify-content: center; */\r\n`\r\n\r\nconst RegisterFields = styled.div`\r\n    /* height: 100%; */\r\n    margin-bottom: var(--space-20);\r\n\r\n    display: grid;\r\n    justify-content: center;\r\n    align-content: center;\r\n\r\n    grid-template-columns: repeat(2, 26rem);\r\n    grid-column-gap: var(--space-20);\r\n    grid-row-gap: var(--space-12);\r\n`;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["title","disabled","customStyles","onClick","props","ButtonContainer","type","style","styled","GroupMenuItems","titleStyles","children","GroupContainer","className","MenuItem","MenuItemContainer","css","styledType","trigger","error","customContainerStyes","useState","isOpen","setIsOpen","DropdownWrapper","DropdownTrigger","DropdownContainer","StyledTypes","value","hasError","onChange","InputErrorContainer","Input","errorMsg","ErrorDisplay","LARGE","customStyleProps","customField","RecordContainer","validateEmail","email","test","String","toLowerCase","dispatch","useDispatch","firstName","lastName","emailAddress","password","role","attributes","name","values","setValues","allRoles","setAllRoles","errors","setErrors","handleOnValueChange","e","currentTarget","validateValues","isValid","validateErrors","Object","entries","key","push","keys","length","console","log","newUserObj","Parse","set","save","loggedIn","updatedUserDetails","id","get","roleQuery","then","res","userRole","catch","err","sessionToken","ACL","setUser","alert","useEffect","queryRoles","find","results","getAllRoles","RegisterWrapper","RegisterContainer","RegisterFields","includes","width","map","index","handleSelectRole","fontSize","textTransform","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys"],"sourceRoot":""}