{"version":3,"file":"static/js/622.c9b01ecf.chunk.js","mappings":"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","sources":["components/Button/index.tsx","components/InputField/index.tsx","components/Record/index.tsx","helpers/validators/index.tsx","pages/Auth/Login/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { FunctionComponent, CSSProperties } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface ButtonStyled { \r\n    outline?: boolean,\r\n    primary?: boolean\r\n}\r\ninterface ButtonProps extends ButtonStyled {\r\n    title?: string,\r\n    disabled?: boolean,\r\n    customStyles?: CSSProperties\r\n    onClick?: () => any\r\n}\r\n\r\nconst Button : FunctionComponent <ButtonProps> = ({ title, disabled, customStyles, onClick, ...props}) => {\r\n    return (\r\n        <ButtonContainer\r\n            type='button'\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            style={customStyles}\r\n            {...props}\r\n        >\r\n            {title}\r\n        </ButtonContainer>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n\r\nconst ButtonContainer = styled.button<ButtonStyled>`\r\n    outline: none;\r\n    border: none;\r\n\r\n    width: auto;\r\n    padding: var(--space-12) var(--space-14);\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-family: 'DM Sans';\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-size: normal;\r\n\r\n    color: var(--color-white);\r\n    background-color: var(--color-purple-800);\r\n    border-radius: 0.25rem;\r\n\r\n   cursor: pointer;\r\n\r\n   :disabled {\r\n       cursor: default;\r\n   }\r\n\r\n\r\n`;","import { ChangeEvent, FunctionComponent } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport enum StyledTypes {\r\n    LARGE = 'LARGE',\r\n    SMALL = 'SMALL'\r\n}\r\n\r\nexport interface Error {\r\n    hasError: boolean,\r\n    errorMsg?: string\r\n}\r\n\r\nexport interface InputProps {\r\n    styledType?: StyledTypes,\r\n    type?: string,\r\n    value?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => any,\r\n    error?: Error,\r\n    [x: string]: any\r\n}\r\n\r\nconst InputField : FunctionComponent <InputProps> = ({ styledType, type = 'text', value, error={ hasError: false }, onChange, ...props}) => {\r\n    return (\r\n        <InputErrorContainer>\r\n            <Input\r\n                styledType={styledType}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                error={error.hasError}\r\n                {...props}\r\n            />\r\n            {(error.hasError && error.errorMsg) &&\r\n                <ErrorDisplay styledType={styledType}>{error.errorMsg}</ErrorDisplay>\r\n            }\r\n        </InputErrorContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default InputField;\r\n\r\nconst InputErrorContainer = styled.div`\r\n    width: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input<{styledType?: StyledTypes, error?: boolean}>`\r\n    outline: none !important;\r\n\r\n    padding: var(--space-10) var(--space-12);\r\n    background-color: var(--color-white);\r\n    border: 1px solid var(--color-gray-800);\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: var(--color-gray-600);\r\n\r\n    border-radius: 0.25rem;\r\n    box-sizing: border-box;\r\n\r\n    ::placeholder {\r\n        color: var(--color-gray-400);\r\n    }\r\n\r\n    :focus {\r\n        border: 1px solid var(--color-purple-800);\r\n\r\n        ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n            border: 2px solid var(--color-purple-800);\r\n        `}\r\n\r\n        ${props => (props.error && (props.styledType === StyledTypes.LARGE)) && css`\r\n            border: 2px solid var(--color-red-600);\r\n        `}\r\n    }\r\n\r\n    ${props => props.error && css`\r\n        border: 1px solid var(--color-orange-600);\r\n        background-color: var(--color-orange-100);\r\n    `}\r\n\r\n    ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n        min-width: 25rem;\r\n        min-height: 3rem;\r\n\r\n        font-size: var(--font-16);\r\n        font-weight: 500;\r\n\r\n        border: 2px solid var(--color-gray-600);\r\n\r\n    `}\r\n\r\n    ${props => (props.error && (props.styledType === StyledTypes.LARGE)) && css`\r\n        border: 2px solid var(--color-red-600);\r\n        background-color: var(--color-white);\r\n        color: var(--color-black);\r\n    `}\r\n\r\n\r\n`;\r\n\r\nconst ErrorDisplay = styled.div<{styledType?: StyledTypes}>`\r\n    margin-top: var(--space-8);\r\n    padding: var(--space-8);\r\n    border-radius: 0.25rem;\r\n\r\n    font-size: var(--font-10);\r\n\r\n    color: var(--color-orange-800);\r\n    background-color: var(--color-red-100);\r\n\r\n    border: 1px solid var(--color-red-800);\r\n\r\n    ${props => (props.styledType === StyledTypes.LARGE) && css`\r\n        font-size: var(--font-12);\r\n    `}\r\n\r\n`;","import { FunctionComponent, CSSProperties } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport InputField, { InputProps } from '../InputField';\r\n\r\ninterface RecordProps extends InputProps {\r\n    title: string,\r\n    customStyleProps?: CSSProperties,\r\n    customField?: any,\r\n}\r\n\r\nconst Record : FunctionComponent <RecordProps> = ({ title, customStyleProps, customField, ...props}) => {\r\n    return (\r\n        <RecordContainer style={customStyleProps}>\r\n            <p>{title}</p>\r\n            {customField ||\r\n                <InputField\r\n                    {...props}\r\n                />\r\n            }\r\n            \r\n        </RecordContainer>\r\n    )\r\n}\r\n\r\nexport default Record;\r\n\r\nconst RecordContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    font-family: Inter;\r\n    font-size: var(--font-14);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    color: var(--color-gray-600);\r\n\r\n    p { margin: 0; margin-bottom: var(--space-8);}\r\n\r\n`;","export const validateEmail = (email: string) : boolean => {\r\n    let isValid = true;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    isValid = re.test(String(email).toLowerCase());\r\n    return isValid;\r\n};\r\n\r\n","import { ChangeEvent, CSSProperties, FunctionComponent, useEffect, useState } from 'react';\r\nimport { batch, useDispatch, useSelector } from 'react-redux';\r\nimport Parse, { Role } from 'parse';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from '../../../components/Button';\r\nimport InputField, { StyledTypes } from '../../../components/InputField';\r\nimport Record from '../../../components/Record';\r\nimport { validateEmail } from '../../../helpers/validators';\r\nimport { getUser, setUser } from '../../../store/authReducer';\r\n\r\nconst Login : FunctionComponent = () => {\r\n    const user = useSelector(getUser);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n\r\n    function handleOnChangeValue(e: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = e.currentTarget\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    function validateValues() {\r\n        let isValid = true;\r\n        let validateErrors : string[] = [];\r\n        for(const [key, value] of Object.entries(values)) {\r\n            if (key === 'email') {\r\n                if (!value) {\r\n                    validateErrors.push(key);\r\n                } else {\r\n                    const isEmailValid = validateEmail(value);\r\n                    if (!isEmailValid) {\r\n                        validateErrors.push(key);\r\n                    }\r\n                }\r\n            } else {\r\n                if (!value) {\r\n                    validateErrors.push(key);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (validateErrors.length > 0) {\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(validateErrors);\r\n\r\n\r\n        return isValid;\r\n    }\r\n\r\n    async function handleLoginUser() {\r\n        const valid = validateValues();\r\n        if (!valid) { return; }\r\n\r\n        try {\r\n            const loggedInUser: Parse.User = await Parse.User.logIn(values.email, values.password);\r\n            const currentUser = await Parse.User.current();\r\n            console.log('Success logged in:', currentUser, loggedInUser);\r\n            if (loggedInUser === currentUser) {\r\n\r\n                let updatedUserDetails : any = {\r\n                    id: currentUser.id,\r\n                    ...currentUser.attributes,\r\n                    role: {\r\n                        id: currentUser.get('role').id,\r\n                    },\r\n                }\r\n\r\n                const roleQuery: Parse.Query = new Parse.Query('_Role');\r\n                await roleQuery.get(currentUser.get('role').id)\r\n                    .then(res => {\r\n                        const userRole = res.get('name');\r\n                        updatedUserDetails = {\r\n                            ...updatedUserDetails,\r\n                            role: {\r\n                                ...updatedUserDetails.role,\r\n                                name: userRole\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('User role could not be found: ', err);\r\n                    })\r\n\r\n\r\n                delete updatedUserDetails.sessionToken;\r\n                delete updatedUserDetails.ACL;\r\n                \r\n                dispatch(setUser(updatedUserDetails));\r\n            }\r\n        } catch (err) {\r\n            console.log('Login failed:', err);\r\n            alert('Invalid login. Please try again');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <LoginWrapper>\r\n            <LoginContainer>\r\n\r\n                <Record\r\n                    title='Email Address'\r\n                    styledType={StyledTypes.LARGE}\r\n                    customStyleProps={{ ...loginRecordStyles }}\r\n                    name=\"email\"\r\n                    onChange={handleOnChangeValue}\r\n                    error={{\r\n                        hasError: errors.includes('email'),\r\n                        errorMsg: 'Please enter valid email'\r\n                    }}\r\n                />\r\n                \r\n                <Record\r\n                    title='Password'\r\n                    styledType={StyledTypes.LARGE}\r\n                    type=\"password\"\r\n                    customStyleProps={{ ...loginRecordStyles, marginTop: 'var(--space-12'}}\r\n                    name=\"password\"\r\n                    onChange={handleOnChangeValue}\r\n                    error={{\r\n                        hasError: errors.includes('password'),\r\n                        errorMsg: 'Please enter a password'\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    title='Login'\r\n                    onClick={handleLoginUser}\r\n                    customStyles={{\r\n                        marginTop: 'var(--space-14)',\r\n                        width: '25rem',\r\n                        fontSize: 'var(--font-18)',\r\n                        textTransform: 'uppercase'\r\n                    }}\r\n                />\r\n            </LoginContainer>\r\n        </LoginWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\nconst loginRecordStyles : CSSProperties = {\r\n    fontFamily: 'DM Sans',\r\n    fontSize: 'var(--font-16)'\r\n}\r\n\r\nconst LoginWrapper = styled.div`\r\n    height: max-content;\r\n    width: 100%;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["title","disabled","customStyles","onClick","props","ButtonContainer","type","style","styled","StyledTypes","styledType","value","error","hasError","onChange","InputErrorContainer","Input","errorMsg","ErrorDisplay","LARGE","css","customStyleProps","customField","RecordContainer","validateEmail","email","test","String","toLowerCase","useSelector","getUser","dispatch","useDispatch","useNavigate","useState","password","values","setValues","errors","setErrors","handleOnChangeValue","e","currentTarget","name","validateValues","isValid","validateErrors","Object","entries","key","push","length","Parse","loggedInUser","currentUser","console","log","updatedUserDetails","id","attributes","role","get","roleQuery","then","res","userRole","catch","err","sessionToken","ACL","setUser","alert","LoginWrapper","LoginContainer","loginRecordStyles","includes","marginTop","width","fontSize","textTransform","fontFamily","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys","keys"],"sourceRoot":""}